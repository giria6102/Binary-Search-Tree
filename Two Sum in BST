void inorder(BinaryTreeNode<int>* root,vector<int>&ans){   // T(c)=O(n),S(c)=O(n)
    if(root==NULL){
        return;
    }
    //inorder=LNR
      inorder(root->left,ans);
      ans.push_back(root->data);
      inorder(root->right,ans);
}
bool twoSumInBST(BinaryTreeNode<int>* root, int target) {
	vector<int>ans;
    inorder(root,ans);
    int i=0;
    int j=ans.size()-1;
    while(i<j){
        if(ans[i]+ans[j]==target){
            return true;
        }
        else if(ans[i]+ans[j]>target){
            j--;
        }
        else{
            i++;
        }
    }
   return false;
}
